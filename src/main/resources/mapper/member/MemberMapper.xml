<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.albamen.mapper.member.MemberMapper">

    <resultMap id="memberMap" type="com.example.albamen.dto.member.MemberDTO">
        <id property="mno" column="mno"/>
        <result property="id" column="id"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="regDate" column="regDate"/>
        <result property="tel" column="tel"/>
        <result property="mstatus" column="mstatus"/>
        <result property="cno" column="cno"/>
        <result property="bno" column="bno"/>
        <collection property="authList" resultMap="authMap"></collection>
        <collection property="work_mList" resultMap="work_mMap"></collection>
    </resultMap>

    <resultMap id="work_mMap" type="com.example.albamen.dto.member.Work_MDTO">
        <id property="wno" column="wno"/>
        <result property="wday" column="wDay"/>
        <result property="mno" column="mno"/>
        <result property="bno" column="bno"/>
        <result property="startTime" column="startTime"/>
        <result property="endTime" column="endTime"/>
        <result property="overTime" column="overTime"/>
        <result property="startstatus" column="startstatus"/>
        <result property="endstatus" column="endstatus"/>

    </resultMap>

    <resultMap id="authMap" type="com.example.albamen.dto.security.AuthDTO">
        <result property="ano" column="ano"/>
        <result property="mno" column="mno"/>
        <result property="cno" column="cno"/>
        <result property="auth" column="auth"/>
    </resultMap>



    <insert id="insertMember">
        insert into member(id, password, name, tel, cno, bno)
        values(
        #{id},
        #{password},
        #{name},
        #{tel},
        #{cno},
        #{bno}
        )
    </insert>
    <select id="idCheck" resultType="int">
        select count(*) from member where id=#{id}
    </select>
    <select id="listMember" resultMap="memberMap">
        select * from member
    </select>

    <select id="selectMember" resultMap="memberMap">
        select m.*, a.* from member m
        left join auth a on m.mno = a.mno
        where id = #{id}
    </select>

    <update id="updateMember">
        update member set password = #{password}, tel = #{tel} where id = #{id}
    </update>
    <select id="workList" resultMap="memberMap">
        select *
        from member m, work_management w
        where m.mno = w.mno and m.id = #{id}
        order by wno desc
    </select>
<!--    출근입력-->
    <insert id="insertWork">
        insert into work_management(mno,wDay,bno,startTime,endTime,overTime,startstatus, endstatus)
        select #{mno},now(),#{bno},now(),null,null,#{startstatus},0
        where not exists(
        select wDay from work_management
        where wDay = date(now()))
    </insert>
    <!--    퇴근입력-->
    <update id="updateWork">
        update work_management set endTime = now(), overTime = ${overTime}, endstatus = ${endstatus}
        where wDay=date(now())
        and endTime is null
        and mno = #{mno}
        and bno = #{bno}
    </update>

    <select id="getMember" resultMap="memberMap">
        select m.mno, m.id , m.password, m.name, m.cno, m.bno, a.ano, a.auth
        from member m
        left join auth a on m.mno = a.mno
        where m.id = #{id}
    </select>

    <insert id="insertAuth">
        insert into auth(mno, auth)
        values (#{mno}, #{auth})
    </insert>

    <delete id="deleteAuth">
        delete from auth where mno = #{mno} and auth = #{auth}
    </delete>

    <select id="selectAuth">
        select ano, mno, auth
        from auth
        where mno = #{mno}
    </select>

    <select id="selectAuthList" resultMap="memberMap">
        select ano, mno, auth
        from auth
    </select>
    
    <select id="selectBranchOfMember" resultMap="memberMap">
        select m.mno, m.id, m.name, m.tel, m.regDate, m.mStatus, m.cno, m.bno, a.ano, a.mno, a.auth
        from member m
        left join auth a on m.mno = a.mno
        where bno = #{bno}
    </select>


</mapper>

